#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/helper.h"

/* Global defaults */

#define QUICK_TAP_MS 175

/* Homerow mods */

#define KEYS_L  0 1 2 3  4  5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41
#define KEYS_R  6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47
#define THUMBS 48 49 50 51 52 53 54 55

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
               tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
               require-prior-idle-ms = <150>; hold-trigger-on-release;         \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.

// Finger importance: 1=Index, 2=Middle, 3=Ring, 4=Pinky
// Left side
#define LHRM1 LSHFT
#define LHRM2 LGUI
#define LHRM3 LALT
#define LHRM4 LCTRL

// Right side
#define RHRM1 RSHFT
#define RHRM2 RGUI
#define RHRM3 RALT
#define RHRM4 RCTRL

// Behavior-calling macros for home row mods
// Left side
#define LHM1(_key)  &hml LHRM1 _key
#define LHM2(_key)  &hml LHRM2 _key
#define LHM3(_key)  &hml LHRM3 _key
#define LHM4(_key)  &hml LHRM4 _key

// Right side
#define RHM1(_key)  &hmr RHRM1 _key
#define RHM2(_key)  &hmr RHRM2 _key
#define RHM3(_key)  &hmr RHRM3 _key
#define RHM4(_key)  &hmr RHRM4 _key

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <175>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
           label = "Base";
           bindings = <
&kp ESC    &kp N1   &kp N2   &kp N3     &kp N4     &kp N5          &kp N6      &kp N7     &kp N8     &kp N9   &kp N0      &kp MINUS
&kp TAB    &kp Q    &kp W    &kp E      &kp R      &kp T           &kp Y       &kp U      &kp I      &kp O    &kp P       &kp BSLH
&kp CAPS   LHM4(A)  LHM3(S)  LHM2(D)    LHM1(F)    &kp G           &kp H       RHM1(J)    RHM2(K)    RHM3(L)  RHM4(SEMI)  &kp SQT
&kp LSHFT  &lt 3 Z  &kp X    &kp C      &kp V      &kp B           &kp N       &kp M      &kp COMMA  &kp DOT  &lt 3 FSLH  &kp RSHFT
                             &kp LGUI   &kp SPACE  &mo 1           &mo 2       &kp ENTER
                                        &kp LALT   &kp BSPC        &kp DEL
            >;
        };

        layer_1 {
            label = "Lower";
            bindings = <
&kp GRAVE  &kp EXCL   &kp AT    &kp HASH  &kp DLLR   &kp PRCNT          &kp CARET        &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR       &kp UNDER
&none      &none      &none     &none     &none      &none              &kp LBKT         &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp RBKT       &none
&none      &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none              &kp KP_PLUS      &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS   &kp KP_EQUAL
&none      &none      &none     &none     &none      &none              &kp KP_MULTIPLY  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DIVIDE  &kp KP_DOT
                                &none     &none      &trans             &trans    &trans
                                          &trans     &trans             &trans
            >;
        };

        layer_2 {
            label = "Raise";
            bindings = <
&kp F1      &kp F2    &kp F3    &kp F4    &kp F5    &kp F6            &kp F7     &kp F8     &kp F9     &kp F10    &kp F11    &kp F12
&kp C_NEXT  &none     &none     &none     &none     &none             &none      &none      &none      &none      &none      &kp C_VOL_UP
&kp C_PP    &kp LEFT  &kp UP    &kp DOWN  &kp RIGHT &none             &none      &kp RSHFT  &kp RGUI   &kp RALT   &kp RCTRL  &kp C_MUTE
&kp C_PREV  &kp HOME  &kp PGUP  &kp PGDN  &kp END   &none             &none      &none      &none      &none      &none      &kp C_VOL_DN
                                &none     &none     &trans            &trans     &trans
                                          &none     &none             &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans          &trans        &trans        &trans        &trans              &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans        &trans        &trans              &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans        &trans        &trans              &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans          &mo 4         &trans        &trans        &trans              &trans      &trans  &trans  &mo 4   &trans  &trans
                                      &mkp MB2      &mkp MB1      &mkp MB3            &mkp MB3    &mkp MB1
                                                    &trans        &mkp MB2            &mkp MB2
            >;
        };

        layer_4 {
            bindings = <
        &trans  &trans          &trans        &trans        &trans        &trans              &trans      &trans  &trans  &trans  &trans  &trans
        &trans  &trans          &trans        &trans        &trans        &trans              &trans      &trans  &trans  &trans  &trans  &trans
        &trans  &trans          &trans        &trans        &trans        &trans              &trans      &trans  &trans  &trans  &trans  &trans
        &trans  &trans          &trans        &trans        &trans        &trans              &trans      &trans  &trans  &trans  &trans  &trans
                                              &mkp MB2      &mkp MB1      &mkp MB3            &mkp MB3    &mkp MB1
                                                            &trans        &mkp MB2            &mkp MB2
            >;
        };
    };
};